<Window x:Class="Phinite.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		Title="NITE" Icon="Phi.ico"
		Width="800" Height="600" MinWidth="400" MinHeight="400">
	<Window.Resources>
		<Style TargetType="Button">
			<Setter Property="Margin" Value="2,2,2,2" />
			<Setter Property="Padding" Value="10,1,10,1" />
		</Style>
		<Style TargetType="Label">
			<Setter Property="FontWeight" Value="Bold" />
		</Style>
	</Window.Resources>
	<Grid Name="MainWindowGrid">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Menu>
			<MenuItem Name="MenuExamples" Header="Load example" />
			<Separator />
			<MenuItem Name="OptionAbout" Header="About" Click="OptionAbout_Click" />
			<MenuItem Header="View BA" Click="OptionViewBA_Click" />
			<MenuItem Header="View TA" Click="OptionViewTA_Click" />
			<MenuItem Header="Exit" Click="OptionExit_Click" />
		</Menu>
		<Image Name="PhiImage" Grid.Row="1" Source="Phi.png"
				Width="183" Height="183" VerticalAlignment="Top" HorizontalAlignment="Left"
				Margin="-140,-290,0,0" Opacity="0.5" RenderTransformOrigin="0.5,0.5">
			<Image.RenderTransform>
				<TranslateTransform
					X="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
					Y="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"/>
			</Image.RenderTransform>
			<!--<Image.LayoutTransform>
			</Image.LayoutTransform>-->
		</Image>
		<StackPanel Name="AreaForInput" Grid.Row="1" Visibility="Hidden"
				HorizontalAlignment="Center" VerticalAlignment="Center">
			<TextBlock Text="Enter a valid regular expression:" />
			<TextBox Name="Input" Text="{Binding InputText}" />
			<Separator Height="5" />
			<!--<TextBlock Text="Spaces will be ignored. Legend:&#013;+ union&#013;^* Kleene star&#013;^+ Kleene plus&#013;Use parentheses for more complex expressions." />
			<Separator />-->
			<TextBlock Text="Select computation method:" />
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
				<Button Name="OptionStepByStep" Content="Step by step" Click="OptionStepByStep_Click" />
				<Button Name="OptionImmediate" Content="Immediate solution" Click="OptionImmediate_Click" />
			</StackPanel>
		</StackPanel>
		<Grid Name="AreaForIntermediateResult" Grid.Row="1" Visibility="Visible">
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<ScrollViewer Grid.Row="0">
				<StackPanel Orientation="Vertical">
					<Label Content="Input information" />
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Original input: " />
						<TextBlock Name="OriginalInput" Text="none" />
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Validated and optimized input: " />
						<TextBlock Name="ValidatedInput" Text="none" />
					</StackPanel>
					<Separator />
					<!--x:Name="IntermediateResultLabel"-->
					<Label Content="Labeled expressions" />
					<!--Name="LabeledExpressionsDataGrid" -->
					<DataGrid ItemsSource="{Binding LabeledExpressionsData}" AutoGenerateColumns="False">
						<DataGrid.Columns>
							<DataGridTextColumn Header="Regular expression" Binding="{Binding Item1}" Width="Auto" />
							<DataGridTextColumn Header="Label" Binding="{Binding Item2}" Width="Auto" />
							<DataGridTextColumn Header="Remarks" Binding="{Binding Item3}" Width="Auto" />
						</DataGrid.Columns>
					</DataGrid>
					<Separator />
					<Label Content="Transitions" />
					<ScrollViewer VerticalScrollBarVisibility="Hidden">
						<DataGrid ItemsSource="{Binding TransitionsData}" AutoGenerateColumns="False">
							<DataGrid.Columns>
								<DataGridTextColumn Header="Initial expression" Binding="{Binding Item1}" Width="Auto" />
								<DataGridTextColumn Header="Initial state" Binding="{Binding Item2}" Width="Auto" />
								<DataGridTextColumn Header="Letter" Binding="{Binding Item3}" Width="Auto" />
								<DataGridTextColumn Header="Resulting state" Binding="{Binding Item4}" Width="Auto" />
								<DataGridTextColumn Header="Resulting expression" Binding="{Binding Item5}" Width="Auto" />
							</DataGrid.Columns>
						</DataGrid>
					</ScrollViewer>
				</StackPanel>
			</ScrollViewer>
			<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
				<Button Name="OptionNextStep" Content="Next step" Click="OptionNextStep_Click" />
				<Button Name="OptionFinalResult" Content="To final result" Click="OptionFinalResult_Click" />
				<Button Name="OptionAbort" Content="Abort computation" Click="OptionAbort_Click" />
			</StackPanel>
		</Grid>
		<Grid Name="AreaForFinalResult" Grid.Row="1" Visibility="Hidden">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Text="LaTeX output:" />
			<ScrollViewer Grid.Row="1">
				<TextBox Name="LatexOutput" Text="{Binding LatexOutputText}"
					TextWrapping="Wrap" AcceptsReturn="True"
					FontFamily="Courier New" />
			</ScrollViewer>
			<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
				<Button Name="OptionGeneratePDF" Content="Save LaTeX, then generate and view PDF" Click="OptionGenerateAndViewPDF_Click" />
				<Button Name="OptionDiscardResult" Content="Discard result" Click="OptionAbort_Click" />
			</StackPanel>
		</Grid>
		<StatusBar Grid.Row="2">
			<StatusBar.Items>
				<TextBlock Text="{Binding StatusText}" />
			</StatusBar.Items>
		</StatusBar>
	</Grid>
</Window>
